<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "pasl::graph::prop_search_same&lt;pasl::graph::adjlist&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;, void pasl::graph::check_dijkstra&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;()::&apos;lambda&apos;(pasl::graph::adjlist&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt; const&amp;, long), void pasl::graph::check_dijkstra&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;()::pasl::graph::check_dijkstra&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;::&apos;lambda&apos;()::operator()() const::&apos;lambda&apos;(pasl::graph::adjlist&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt; const&amp;, long), void pasl::graph::check_dijkstra&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;()::&apos;lambda&apos;(int*, long), void pasl::graph::check_dijkstra&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;()::&apos;lambda&apos;(int*, long), int&gt;::holdsFor(pasl::graph::adjlist&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt; const&amp;):tests_shortest.cpp">
         <PersistentStrings>
            <PersistentString
               value = "*(res_to_test + 4)">
            </PersistentString>
            <PersistentString
               value = "(dist + 1)*">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "int* pasl::graph::dijkstra_dummy_seq&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;(pasl::graph::adjlist&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt; const&amp;, pasl::graph::adjlist&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;::vtxid_type):dijkstra.hpp">
         <PersistentStrings>
            <PersistentString
               value = "*(dist + 4)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "void pasl::graph::process_vertex_seq&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;(pasl::graph::adjlist&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt; const&amp;, int*, int):bellman_ford.hpp">
      </ContextState>
      <ContextState
         contextName = "void generate&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;(pasl::graph::generator_type&amp;, unsigned long, pasl::graph::adjlist&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;&amp;):tests_shortest.cpp">
      </ContextState>
      <ContextState
         contextName = "int* pasl::graph::bellman_ford_par1&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;(pasl::graph::adjlist&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt; const&amp;, pasl::graph::adjlist&lt;pasl::graph::flat_adjlist_seq&lt;long, false&gt; &gt;::vtxid_type):bellman_ford.hpp">
         <PersistentStrings>
            <PersistentString
               value = "dist+4">
            </PersistentString>
            <PersistentString
               value = "*(dist + 4)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "void pasl::graph::generate_complete_graph&lt;pasl::data::array_seq&lt;pasl::graph::edge&lt;long&gt; &gt; &gt;(pasl::data::array_seq&lt;pasl::graph::edge&lt;long&gt; &gt;::value_type::vtxid_type, pasl::graph::edgelist&lt;pasl::data::array_seq&lt;pasl::graph::edge&lt;long&gt; &gt; &gt;&amp;):graphgenerators.hpp">
         <PersistentStrings>
            <PersistentString
               value = "edge_type">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
